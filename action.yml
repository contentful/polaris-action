name: "Synopsys Polaris Security Testing"
description: "Run Coverity SAST via the Polaris platform and provide feedback within GitHub pull requests"
author: "Synopsys Inc"
inputs:
  github_token:
    description: "Your GitHub token"
    required: true
  polaris_url:
    description: "The URL of the Polaris server to be referenced API calls"
    required: true
  polaris_access_token:
    description: "An access token to support API calls"
    required: true
  polaris_command:
    description: 'Command line to pass to the Polaris CLI, will default to "analyze -w"'
    required: false
    default: "analyze -w"
  debug:
    description: "Enable verbose debugging mode"
    required: false
    default: "false"
  diagnostic:
    description: "Enable diagonstic build artifacts"
    required: false
    default: "false"
  security_gate_filters:
    description: "Enable security gate"
    required: false
  fail_on_error:
    description: |
      Exit code when errors are found [true,false]
      Default is `false`.
    default: "false"
    required: false
  skip_run:
    description: "Skip execution of the Polaris CLI command, assume it has been run manually"
    required: false
  report_url:
    description: "URL to report false positives"
    required: false

# runs:
#   using: "composite"
#   steps:
#     - name: Run Polaris scan
#       id: polaris_scan
#       uses: docker://ghcr.io/contentful/polaris-action:docker-image
#       env:
#         POLARIS_ACCESS_TOKEN: ${{ secrets.POLARIS_ACCESS_TOKEN }}
#       with:
#         entrypoint: node index.js

runs:
  using: docker
  image: docker://ghcr.io/contentful/polaris-action:docker-image
  args:
    - ${{ inputs.github_token }}
    - ${{ inputs.polaris_url }}
    - ${{ inputs.polaris_access_token }}
    - ${{ inputs.polaris_command }}
    - ${{ inputs.debug }}
    - ${{ inputs.diagnostic }}
    - ${{ inputs.security_gate_filters }}
    - ${{ inputs.fail_on_error }}
    - ${{ inputs.skip_run }}
    - ${{ inputs.report_url }}
